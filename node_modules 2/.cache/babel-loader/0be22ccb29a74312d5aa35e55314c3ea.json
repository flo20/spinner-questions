{"ast":null,"code":"var _jsxFileName = \"/Users/flo/Documents/Documents/Quiz_app/trivia-quiz-app/src/components/Quiz.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport Question from './Question';\nimport Spinner from './Spinner';\n\nclass Quiz extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loaded: false,\n      questions: [],\n      current: 0,\n      score: 0,\n      quizOver: false\n    };\n\n    this.getQuestions = () => {\n      const id = this.props.location.state ? this.props.location.state.id : 9;\n      const url = `https://opentdb.com/api.php?amount=10&category=${id}&difficulty=easy&type=multiple`;\n      axios.get(url).then(response => {\n        const questions = response.data.results.map(data => {\n          return {\n            question: data.question,\n            correct_answer: data.correct_answer,\n            incorrect_answers: data.incorrect_answers,\n            user_answer: '',\n            correct: ''\n          };\n        });\n        this.setState({\n          loaded: true,\n          questions: questions\n        });\n      }).catch(error => console.error(error));\n    };\n\n    this.handleResult = res => {\n      if (res.correct) {\n        this.setState(prevState => ({\n          score: prevState.score + 1\n        }));\n      }\n\n      this.saveUserAnswer(res);\n      this.showNextQuestion();\n    };\n\n    this.saveUserAnswer = res => {\n      const i = this.state.current;\n      const {\n        correct,\n        answer\n      } = res;\n      const updatedQuestions = [...this.state.questions];\n      updatedQuestions[i] = { ...updatedQuestions[i],\n        user_answer: answer,\n        correct: correct\n      };\n      this.setState({\n        questions: updatedQuestions\n      });\n    };\n\n    this.showNextQuestion = () => {\n      if (this.state.current === this.state.questions.length - 1) {\n        this.setState({\n          quizOver: true\n        });\n        return;\n      }\n\n      this.setState(prevState => ({\n        current: prevState.current + 1\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.getQuestions();\n  }\n\n  render() {\n    const {\n      current,\n      questions,\n      quizOver,\n      loaded,\n      score\n    } = this.state;\n    const category = this.props.location.state ? this.props.location.state.category : 'General knowledge';\n    const redirectObj = {\n      pathname: '/result',\n      state: {\n        result: {\n          questions,\n          score\n        }\n      }\n    };\n\n    if (quizOver) {\n      return React.createElement(Redirect, {\n        to: redirectObj,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      });\n    }\n\n    return loaded ? React.createElement(Question, {\n      question: questions[current],\n      number: current,\n      onHandleResult: this.handleResult,\n      category: category,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }) : React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["/Users/flo/Documents/Documents/Quiz_app/trivia-quiz-app/src/components/Quiz.js"],"names":["React","Component","Redirect","axios","Question","Spinner","Quiz","state","loaded","questions","current","score","quizOver","getQuestions","id","props","location","url","get","then","response","data","results","map","question","correct_answer","incorrect_answers","user_answer","correct","setState","catch","error","console","handleResult","res","prevState","saveUserAnswer","showNextQuestion","i","answer","updatedQuestions","length","componentDidMount","render","category","redirectObj","pathname","result"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport axios from 'axios'\nimport Question from './Question'\nimport Spinner from './Spinner'\n\nclass Quiz extends Component {\n\tstate = {\n\t\tloaded: false,\n\t\tquestions: [],\n\t\tcurrent: 0,\n\t\tscore: 0,\n\t\tquizOver: false\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getQuestions()\n\t}\n\n\tgetQuestions = () => {\n\t\tconst id = this.props.location.state ? this.props.location.state.id : 9\n\t\tconst url = `https://opentdb.com/api.php?amount=10&category=${id}&difficulty=easy&type=multiple`\n\t\taxios\n\t\t\t.get(url)\n\t\t\t.then(response => {\n\t\t\t\tconst questions = response.data.results.map(data => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tquestion: data.question,\n\t\t\t\t\t\tcorrect_answer: data.correct_answer,\n\t\t\t\t\t\tincorrect_answers: data.incorrect_answers,\n\t\t\t\t\t\tuser_answer: '',\n\t\t\t\t\t\tcorrect: ''\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tthis.setState({ loaded: true, questions: questions })\n\t\t\t})\n\t\t\t.catch(error => console.error(error))\n\t}\n\n\thandleResult = res => {\n\t\tif (res.correct) {\n\t\t\tthis.setState(prevState => ({ score: prevState.score + 1 }))\n\t\t}\n\t\tthis.saveUserAnswer(res)\n\t\tthis.showNextQuestion()\n\t}\n\n\tsaveUserAnswer = res => {\n\t\tconst i = this.state.current\n\t\tconst { correct, answer } = res\n\t\tconst updatedQuestions = [...this.state.questions]\n\t\tupdatedQuestions[i] = {\n\t\t\t...updatedQuestions[i],\n\t\t\tuser_answer: answer,\n\t\t\tcorrect: correct\n\t\t}\n\t\tthis.setState({ questions: updatedQuestions })\n\t}\n\n\tshowNextQuestion = () => {\n\t\tif (this.state.current === this.state.questions.length - 1) {\n\t\t\tthis.setState({ quizOver: true })\n\t\t\treturn\n\t\t}\n\t\tthis.setState(prevState => ({ current: prevState.current + 1 }))\n\t}\n\n\trender() {\n\t\tconst { current, questions, quizOver, loaded, score } = this.state\n\t\tconst category = this.props.location.state\n\t\t\t? this.props.location.state.category\n\t\t\t: 'General knowledge'\n\t\tconst redirectObj = {\n\t\t\tpathname: '/result',\n\t\t\tstate: { result: { questions, score } }\n\t\t}\n\n\t\tif (quizOver) {\n\t\t\treturn <Redirect to={redirectObj} />\n\t\t}\n\n\t\treturn loaded ? (\n\t\t\t<Question\n\t\t\t\tquestion={questions[current]}\n\t\t\t\tnumber={current}\n\t\t\t\tonHandleResult={this.handleResult}\n\t\t\t\tcategory={category}\n\t\t\t/>\n\t\t) : (\n\t\t\t<Spinner />\n\t\t)\n\t}\n}\n\nexport default Quiz\n"]},"metadata":{},"sourceType":"module"}